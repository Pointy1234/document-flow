--удаление таблиц
drop table DOC_HEADERS cascade constraints;
drop table DOC_LINES cascade constraints;
drop table PARTICIPANTS cascade constraints;
drop table SIGNERS cascade constraints;


--удаление последовательностей 
drop sequence DOC_HEADERS_ID_SEQ;
drop sequence DOC_LINES_ID_SEQ;
drop sequence PARTICIPANTS_ID_SEQ;
drop sequence SIGNERS_ID_SEQ;
drop sequence HOLDER_ID_SEQ;


--удаление триггеров
drop trigger DOC_HEADERS_ID_SEQ;
drop trigger DOC_LINES_ID_SEQ;
drop trigger PARTICIPANTS_ID_SEQ;
drop trigger  SIGNERS_ID_SEQ;
drop trigger BUFFER_ID_SEQ;

CREATE TABLE PARTICIPANTS (
PARTICIPANT_ID  NUMBER NOT NULL,
CONSTRAINT PARTICIPANT_ID_PK PRIMARY KEY (PARTICIPANT_ID),
ORGANISATIONS_CODE VARCHAR2(10 CHAR),
ORG_STRUCTURE  VARCHAR2(1000 CHAR),
PARTICIPANT_INFO VARCHAR2(255 CHAR),
PH_PERSON_INN CHAR(12 CHAR) NOT NULL,
PARTICIPANT_SURNAME VARCHAR2(60 CHAR) NOT NULL,
PARTICIPANT_NAME VARCHAR2(60 CHAR) NOT NULL,
PARTICIPANT_PATRONYM VARCHAR2(60 CHAR) ,
ORGANIZATION_NAME VARCHAR2(1000 CHAR) NOT NULL,
LEG_PERSON_INN CHAR(10 CHAR) NOT NULL,
REASON_CODE CHAR(9 CHAR), --KPP
EXTRA_LEG_PERSON_INFO VARCHAR2(255 CHAR),
PARTICIPANT_INDEX CHAR(6 CHAR),
REGION_CODE CHAR(2 CHAR) NOT NULL,
DISTRICT VARCHAR2(50 CHAR),
CITY VARCHAR2(50 CHAR),
SETTLEMENT VARCHAR2(50 CHAR),
STREET VARCHAR2(50 CHAR),
HOUSE VARCHAR2(20 CHAR),
CORPUS VARCHAR2(20 CHAR),
FLAT VARCHAR2(20 CHAR),
COUNTRY_CODE CHAR(3 CHAR) NOT NULL,
ADDRESS VARCHAR2(255 CHAR) NOT NULL,
UNIQUE_ADDRESS_CODE  VARCHAR2(36 CHAR) ,
	
PHONE_NUMBER VARCHAR2(255 CHAR),
EMAIL VARCHAR2(255 CHAR),
BANK_ACCOUNT  VARCHAR2(20 CHAR),
BANK_NAME VARCHAR2(1000 CHAR),
IDENTIFY_BANK_CODE CHAR(9 CHAR),
CORRESPONDENT_BANK_ACC VARCHAR2(20 CHAR),
PARTICIPANTS_TYPE VARCHAR2(100 CHAR) NOT NULL,
CONSTRAINT PARTICIPANTS_TYPE_CHK CHECK (PARTICIPANTS_TYPE IN('Прод','ГрузОт','ГрузПолуч','Покуп'))
);

COMMENT ON TABLE PARTICIPANTS IS 'Таблица информации об участниках документа';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_ID  IS 'Идентификатор участника';
COMMENT ON COLUMN PARTICIPANTS.ORGANISATIONS_CODE IS 'Код в общероссийском классификаторе предприятий и организаций';
COMMENT ON COLUMN PARTICIPANTS.ORG_STRUCTURE IS 'Структурное подразделение';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_INFO IS 'Информация для участника документооборота';
COMMENT ON COLUMN PARTICIPANTS.PH_PERSON_INN IS 'ИНН физического лица';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_SURNAME IS 'Фамилия участника';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_NAME IS 'Имя участника';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_PATRONYM IS 'Отчество участника';
COMMENT ON COLUMN PARTICIPANTS.ORGANIZATION_NAME IS 'Наименование организации';
COMMENT ON COLUMN PARTICIPANTS.LEG_PERSON_INN IS 'ИНН юридического лица';
COMMENT ON COLUMN PARTICIPANTS.REASON_CODE IS 'КПП';
COMMENT ON COLUMN PARTICIPANTS.EXTRA_LEG_PERSON_INFO IS 'Иные сведения, идентифицирующие юридическое лицо';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANT_INDEX IS 'Индекс участника';
COMMENT ON COLUMN PARTICIPANTS.REGION_CODE IS 'Код региона';
COMMENT ON COLUMN PARTICIPANTS.DISTRICT IS 'Район';
COMMENT ON COLUMN PARTICIPANTS.CITY IS 'Город';
COMMENT ON COLUMN PARTICIPANTS.SETTLEMENT IS 'Населенный пункт';
COMMENT ON COLUMN PARTICIPANTS.STREET IS 'Улица';
COMMENT ON COLUMN PARTICIPANTS.HOUSE IS 'Дом';
COMMENT ON COLUMN PARTICIPANTS.CORPUS IS 'Корпус';
COMMENT ON COLUMN PARTICIPANTS.FLAT IS 'Номер квартиры';
COMMENT ON COLUMN PARTICIPANTS.COUNTRY_CODE IS 'Код страны';
COMMENT ON COLUMN PARTICIPANTS.ADDRESS IS 'Адрес';
COMMENT ON COLUMN PARTICIPANTS.UNIQUE_ADDRESS_CODE IS 'Уникальный номер адреса';
COMMENT ON COLUMN PARTICIPANTS.PHONE_NUMBER IS 'Номер контактного телефона';
COMMENT ON COLUMN PARTICIPANTS.EMAIL IS 'Адрес электронной почты ';
COMMENT ON COLUMN PARTICIPANTS.BANK_ACCOUNT IS 'Номер банковского счета';
COMMENT ON COLUMN PARTICIPANTS.BANK_NAME  IS 'Наименование банка';
COMMENT ON COLUMN PARTICIPANTS.IDENTIFY_BANK_CODE IS 'Банковский идентификационный код';
COMMENT ON COLUMN PARTICIPANTS.CORRESPONDENT_BANK_ACC IS 'Корреспондентский счет банка';
COMMENT ON COLUMN PARTICIPANTS.PARTICIPANTS_TYPE IS 'Тип участника';


CREATE TABLE DOC_HEADERS(
DOC_HEADERS_ID NUMBER NOT NULL,
	CONSTRAINT DOC_HEADERS_ID_PR PRIMARY KEY (DOC_HEADERS_ID),	
TDK_FORM_CODE CHAR (7 char)  DEFAULT '1115125' NOT NULL,
FUNCTION_DOC VARCHAR2(6 CHAR) NOT NULL,
	CONSTRAINT FUNCTION_DOC_CHK CHECK (FUNCTION_DOC IN ('СЧФ', 'СЧФДОП', 'ДОП')),
ECONOMIC_LIFE_DOC_NAME VARCHAR2(255 CHAR),
PRIMARY_DOC VARCHAR2(255 CHAR),
EXCH_FORMATION_DATE CHAR(10 CHAR)  NULL,
EXCH_FORMATION_TIME DATE NULL,
ECONOMIC_SUB_NAME VARCHAR2(1000 CHAR) NOT NULL,
ECONOMIC_SUB_BASE VARCHAR2(120 CHAR),
INVOICE_NUMBER VARCHAR2(1000 CHAR) not  NULL,
INVOICE_DATE CHAR(10 CHAR)  NULL,
CURRENCY_CODE CHAR(3 CHAR) NOT NULL,
INVOICE_NUMB_CORRECT NUMBER(3)  NULL,
	CONSTRAINT INVOICE_NUMB_CORRECT_CHK CHECK  (INVOICE_NUMB_CORRECT > 0),
INVOICE_NUMB_CORRECT_DATE CHAR(10 CHAR) NULL,	
PAYMENT_DOC_NUMB VARCHAR2(30 CHAR)  NULL,
PAYMENT_DOC_DATE CHAR(10 CHAR)  NULL,
STATE_CONTRACT_IDENTIFIER VARCHAR2(255 CHAR),
CURRENCY_NAME VARCHAR2(100 CHAR),
CURRENCY_RATE NUMBER(10, 4),
IDENTIFY_INFO_FIELD_FILE CHAR(36 CHAR),
IDENTIFIER_DOC VARCHAR2(50 CHAR)  NULL,
VALUE_DOC VARCHAR2(2000 CHAR)  NULL,
HOLDER_ID NUMBER NOT NULL,

CONSIGNERS_ID NUMBER ,
    CONSTRAINT CONSIGNERS_ID_FK FOREIGN KEY (CONSIGNERS_ID) REFERENCES PARTICIPANTS (PARTICIPANT_ID),
SELLERS_ID NUMBER not NULL,
    CONSTRAINT SELLERS_ID_FK FOREIGN KEY (SELLERS_ID) REFERENCES PARTICIPANTS (PARTICIPANT_ID),
CONSUGNOR_ID NUMBER ,
    CONSTRAINT CONSUGNOR_ID_FK FOREIGN KEY (CONSUGNOR_ID) REFERENCES PARTICIPANTS (PARTICIPANT_ID),
CUSTOMER_ID NUMBER NOT NULL,
    CONSTRAINT CUSTOMER_ID_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES PARTICIPANTS (PARTICIPANT_ID)
);


COMMENT ON TABLE DOC_HEADERS IS 'Шапка документа';
COMMENT ON COLUMN DOC_HEADERS.DOC_HEADERS_ID  IS 'Идентификатор шапки документа';
COMMENT ON COLUMN DOC_HEADERS.TDK_FORM_CODE IS 'Код документа по КНД';
COMMENT ON COLUMN DOC_HEADERS.FUNCTION_DOC IS 'Функция';
COMMENT ON COLUMN DOC_HEADERS.ECONOMIC_LIFE_DOC_NAME IS ' Наименование документа по факту хозяйственной жизни';
COMMENT ON COLUMN DOC_HEADERS.PRIMARY_DOC IS ' Наименование первичного документа, определенное организацией';
COMMENT ON COLUMN DOC_HEADERS.EXCH_FORMATION_DATE IS 'Дата формирования файла обмена счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.EXCH_FORMATION_TIME IS ' Время формирования файла обмена счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.ECONOMIC_SUB_NAME IS ' Наименование экономического субъекта ';
COMMENT ON COLUMN DOC_HEADERS.ECONOMIC_SUB_BASE IS 'Основание, по которому экономический субъект является составителем файла обмена счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.INVOICE_NUMBER  IS ' Порядковый номер счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.INVOICE_DATE IS ' Дата составления счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.CURRENCY_CODE IS 'Код Валюты';
COMMENT ON COLUMN DOC_HEADERS.INVOICE_NUMB_CORRECT IS 'Номер исправления счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.INVOICE_NUMB_CORRECT_DATE IS 'Дата исправления счета-фактуры';
COMMENT ON COLUMN DOC_HEADERS.PAYMENT_DOC_NUMB IS 'Номер платежно-расчетного документа';
COMMENT ON COLUMN DOC_HEADERS.PAYMENT_DOC_DATE IS ' Дата составления платежно-расчетного документа';
COMMENT ON COLUMN DOC_HEADERS.STATE_CONTRACT_IDENTIFIER IS ' Идентификатор государственного контракта';
COMMENT ON COLUMN DOC_HEADERS.CURRENCY_NAME IS 'Наименование валюты';
COMMENT ON COLUMN DOC_HEADERS.CURRENCY_RATE IS 'Курс валюты';
COMMENT ON COLUMN DOC_HEADERS.IDENTIFY_INFO_FIELD_FILE IS 'Идентификатор файла информационного поля';
COMMENT ON COLUMN DOC_HEADERS.IDENTIFIER_DOC IS 'Идентификатор';
COMMENT ON COLUMN DOC_HEADERS.VALUE_DOC IS 'Значение';
--COMMENT ON COLUMN DOC_HEADERS.HEADER_ID IS 'Внешний ключ';


CREATE TABLE DOC_LINES(
DOC_LINES_ID NUMBER NOT NULL,
	CONSTRAINT DOC_LINES_ID_PR PRIMARY KEY (DOC_LINES_ID),
HEADER_ID NUMBER NOT NULL,
	CONSTRAINT HEADER_ID_FK FOREIGN KEY (HEADER_ID) REFERENCES DOC_HEADERS (DOC_HEADERS_ID),
TABLE_ROW_NUMB NUMBER(6,0) NOT NULL,
PROD_NAME VARCHAR2(1000 CHAR) NOT NULL,
UNIT_CODE VARCHAR2(4 CHAR),
PROD_QUANTITY NUMBER(26,11),
PROD_PRICE NUMBER(26,11),
PROD_COST_WITHOUT_TAX NUMBER(19,2),
TAX_RATE VARCHAR2(7CHAR) NOT NULL,
	CONSTRAINT TAX_RATE_CHK CHECK (TAX_RATE IN('0%','10%','18%','20%','10/110','18/118','20/120','без НДС','НДС исчисляется налоговым агентом')),
PROD_COST_WITH_TAX NUMBER(19,2) NOT NULL,
EXCIZE_DUTY_AMOUNT NUMBER(19,2) NOT NULL, 
WITHOUT_EXCIZE_AMOUNT CHAR(10 CHAR),
TAX_AMOUNT NUMBER(19,2) NOT NULL,
WITHOUT_VAT VARCHAR2(18 CHAR)  NULL,
COUNTRY_DIGITAL_CODE CHAR(3 CHAR) NULL,
CUSTOM_DECLARATION_NUMB VARCHAR2(29 CHAR)  NULL,
IDENTIFIER_DOC VARCHAR2(50 CHAR)  NULL,
VALUE_DOC VARCHAR2(2000 CHAR)  NULL,
FEATURE_DOC CHAR(1 CHAR),
	CONSTRAINT FEATURE_DOC_CHK CHECK(FEATURE_DOC IN('1','2','3','4','5')),
EXTRA_FEATURE_INFO VARCHAR2(4 CHAR),
PROD_CODE VARCHAR2(255 CHAR),
UNIT_NAME VARCHAR2(255 CHAR),
BRIEF_COUNTRY_NAME VARCHAR2(255 CHAR),
QUANTITY_RELEASED NUMBER(26, 11),
DEBIT CHAR(9 CHAR),
CREDIT CHAR(9 CHAR)
);


COMMENT ON TABLE DOC_LINES IS 'Табличная часть';
--
COMMENT ON TABLE DOC_LINES.TABLE_ROW_NUMB IS 'Номер строки таблицы';
COMMENT ON COLUMN DOC_LINES.PROD_NAME IS 'Наименование товара';
COMMENT ON COLUMN DOC_LINES.UNIT_CODE IS 'Код единицы измерения';
COMMENT ON COLUMN DOC_LINES.PROD_QUANTITY IS 'Количество товара';
COMMENT ON COLUMN DOC_LINES.PROD_PRICE IS 'Стоимость товара';
COMMENT ON COLUMN DOC_LINES.PROD_COST_WITHOUT_TAX IS 'Стоимость товаров без налога';
COMMENT ON COLUMN DOC_LINES.TAX_RATE IS 'Налоговая ставка';
COMMENT ON COLUMN DOC_LINES.PROD_COST_WITH_TAX IS 'Стоимость товара с налогом';
COMMENT ON COLUMN DOC_LINES.EXCIZE_DUTY_AMOUNT IS 'Сумма акциза';
COMMENT ON COLUMN DOC_LINES.WITHOUT_EXCIZE_AMOUNT IS 'Сумма без акциза';
COMMENT ON COLUMN DOC_LINES.TAX_AMOUNT IS 'Сумма налога';
COMMENT ON COLUMN DOC_LINES.WITHOUT_VAT IS 'Без НДС';
COMMENT ON COLUMN DOC_LINES.COUNTRY_DIGITAL_CODE IS 'Цифровой код страны';
COMMENT ON COLUMN DOC_LINES.CUSTOM_DECLARATION_NUMB IS 'Номер таможенной декларации';
COMMENT ON COLUMN DOC_LINES.IDENTIFIER_DOC IS 'Идентификатор';
COMMENT ON COLUMN DOC_LINES.VALUE_DOC IS 'Значение';
COMMENT ON COLUMN DOC_LINES.FEATURE_DOC IS 'Признак';
COMMENT ON COLUMN DOC_LINES.EXTRA_FEATURE_INFO IS 'Дополнительная информация о признаке';
COMMENT ON COLUMN DOC_LINES.PROD_CODE  IS 'Код товара';
COMMENT ON COLUMN DOC_LINES.UNIT_NAME IS 'Наименование единицы измерения';
COMMENT ON COLUMN DOC_LINES.BRIEF_COUNTRY_NAME IS 'Краткое наименование страны происхождения товара';
COMMENT ON COLUMN DOC_LINES.QUANTITY_RELEASED IS 'Количество надлежит отпустить';
COMMENT ON COLUMN DOC_LINES.DEBIT IS 'Дебет';
COMMENT ON COLUMN DOC_LINES.CREDIT IS 'Кредит';



CREATE TABLE SIGNERS(
SIGNER_ID NUMBER NOT NULL,
	CONSTRAINT SIGNER_ID_PK PRIMARY KEY (SIGNER_ID),
HOLDER_ID NUMBER NOT NULL,
	CONSTRAINT HOLDER_ID_UN UNIQUE (HOLDER_ID),
STATUS CHAR(1 CHAR) NOT NULL, 
AUTHORITY_AREA CHAR(1CHAR) NOT NULL, 
	CONSTRAINT AUTHORITY_AREA_CHK CHECK (AUTHORITY_AREA IN ('0','1','2','3','4','5','6')),
AUTHORITY_BASE VARCHAR2(255 CHAR) NOT NULL,
ORG_AUTH_BASE VARCHAR2(255 CHAR),
SIGNER_SURNAME VARCHAR2(60 CHAR) NOT NULL,
SIGNER_NAME VARCHAR2(60 CHAR) NOT NULL,
SIGNER_PATRONYM VARCHAR2(60 CHAR) ,
REGISTR_REQUISITS VARCHAR2(100 CHAR)  NULL,
PH_PERSON_INN CHAR(12 CHAR)  NULL,
PERSON_EXTRA_INFO VARCHAR2(255 CHAR),
INN CHAR(12 CHAR),
LEG_PERSON_INN CHAR(10 CHAR) NOT NULL,
ORG_NAME VARCHAR2(1000 CHAR),
SIGNER_POSITION VARCHAR2(128 CHAR)  NULL,
PARTICIPANT_TYPE VARCHAR2(100 CHAR) NOT NULL,
CONSTRAINT PARTICIPANT_TYPE_CHK CHECK( PARTICIPANT_TYPE IN('Прод','ГрузОт','ГрузПолуч','Покуп'))
);

COMMENT ON TABLE SIGNERS IS 'Таблица информации о лицах ответственных за подписание документа.';
COMMENT ON COLUMN SIGNERS.HOLDER_ID IS 'Уникальный номер на группу подписантов одного документа.';
COMMENT ON COLUMN SIGNERS.SIGNER_ID IS 'Идентификатор подписанта';
COMMENT ON COLUMN SIGNERS.STATUS IS 'Статус';
COMMENT ON COLUMN SIGNERS.AUTHORITY_AREA IS 'Область полномочий';
COMMENT ON COLUMN SIGNERS.AUTHORITY_BASE IS 'Основание полномочий';
COMMENT ON COLUMN SIGNERS.ORG_AUTH_BASE IS 'Основание полномочий организации';
COMMENT ON COLUMN SIGNERS.SIGNER_SURNAME IS 'Фамилия подписанта';
COMMENT ON COLUMN SIGNERS.SIGNER_NAME IS 'Имя подписанта';
COMMENT ON COLUMN SIGNERS.SIGNER_PATRONYM IS 'Отчество подписанта';
COMMENT ON COLUMN SIGNERS.REGISTR_REQUISITS IS 'Реквизиты свидетельства о государственной регистрации ИП';
COMMENT ON COLUMN SIGNERS.PH_PERSON_INN IS 'ИНН физического лица';
COMMENT ON COLUMN SIGNERS.PERSON_EXTRA_INFO IS 'Иные сведения, идентифицирующие физическое лицо';
COMMENT ON COLUMN SIGNERS.INN IS 'ИНН';
COMMENT ON COLUMN SIGNERS.LEG_PERSON_INN IS 'ИНН юридического лица';
COMMENT ON COLUMN SIGNERS.ORG_NAME IS 'Наименование организации';
COMMENT ON COLUMN SIGNERS.SIGNER_POSITION IS 'Должность';
COMMENT ON COLUMN SIGNERS.PARTICIPANT_TYPE IS 'Тип участника';



CREATE TABLE BUFFER(
BUFFER_ID NUMBER NOT NULL,
	CONSTRAINT BUFFER_ID_PR PRIMARY KEY(BUFFER_ID),
CONTENT clob,
SOURCE VARCHAR2(10 CHAR),
	CONSTRAINT SOURCE_CHK CHECK (SOURCE IN('WEB', 'FYLESYSTEM', 'MANUAL')),
BUFFER_DATE DATE
);

COMMENT ON TABLE BUFFER IS 'БУФЕР';
COMMENT ON TABLE BUFFER.BUFFER_ID IS 'Первичный ключ';
COMMENT ON TABLE BUFFER.CONTENT IS 'Содержимое XML-файла';
COMMENT ON TABLE BUFFER.SOURCE IS 'Источник';
COMMENT ON TABLE BUFFER.BUFFER_DATE IS 'Дата';


CREATE SEQUENCE DOC_HEADERS_ID_SEQ
START WITH 1 
INCREMENT BY 1
CACHE 10;

CREATE OR REPLACE TRIGGER DOC_HEADERS_ID_SEQ 
BEFORE INSERT ON DOC_HEADERS 
FOR EACH ROW 
WHEN (NEW.DOC_HEADERS_ID IS NULL)	
BEGIN
:NEW.DOC_HEADERS_ID:=DOC_HEADERS_ID_SEQ.NEXTVAL;
END;
/


CREATE SEQUENCE DOC_LINES_ID_SEQ
START WITH 1 
INCREMENT BY 1
CACHE 10;

CREATE TRIGGER DOC_LINES_ID_SEQ BEFORE INSERT ON DOC_LINES FOR EACH ROW WHEN (NEW.DOC_LINES_ID IS NULL)
BEGIN
:NEW.DOC_LINES_ID:=DOC_LINES_ID_SEQ.NEXTVAL;
END;
/


CREATE SEQUENCE PARTICIPANTS_ID_SEQ
START WITH 1 
INCREMENT BY 1
CACHE 10;

CREATE OR REPLACE TRIGGER PARTICIPANTS_ID_SEQ BEFORE INSERT ON PARTICIPANTS FOR EACH ROW WHEN (NEW.PARTICIPANT_ID IS NULL)
BEGIN
:NEW.PARTICIPANT_ID:=PARTICIPANTS_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE SIGNERS_ID_SEQ
START WITH 1 
INCREMENT BY 1
CACHE 10;

CREATE OR REPLACE TRIGGER SIGNERS_ID_SEQ BEFORE INSERT ON SIGNERS FOR EACH ROW WHEN (NEW.SIGNER_ID IS NULL)
BEGIN 
:NEW.SIGNER_ID:=SIGNERS_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE HOLDER_ID_SEQ
START WITH 1 
INCREMENT BY 1
CACHE 10;

CREATE OR REPLACE TRIGGER HOLDER_ID_SEQ BEFORE INSERT ON SIGNERS FOR EACH ROW WHEN (NEW.HOLDER_ID IS NULL)
BEGIN 
:NEW.HOLDER_ID:=HOLDER_ID_SEQ.NEXTVAL;
END;

/




/*drop table test;
create table test( col1 number(6,0),constraint check_digits check (length(col1)<=6));
comment on table test is 'ntcnjdfz nf,kbwf';
comment on column test.col1 is 'ntcnjdfz nf,kbwf';

insert into test values (-765478);

select * from test;*/